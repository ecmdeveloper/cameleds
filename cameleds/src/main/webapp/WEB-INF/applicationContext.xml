<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="engine" class="com.ecmdeveloper.eds.core.Engine" />
	<bean id="setHeadersProcessor" class="com.ecmdeveloper.eds.core.SetHeadersProcessor"/>
	<bean id="propertySplitter" class="com.ecmdeveloper.eds.operations.PropertySplitter"/>
	<bean id="propertyOperations" class="com.ecmdeveloper.eds.operations.PropertyOperations"/>
	<bean id="propertyAggrationStrategy" class="com.ecmdeveloper.eds.operations.ProperySplitterAggregation"/>
	<bean id="choiceListEnrichAggregation" class="com.ecmdeveloper.eds.aggregate.ChoiceListEnrichAggregation"/>
	<bean id="logDatabaseResponse" class="com.ecmdeveloper.eds.beans.LogDatabaseResponse"/>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
		<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
		<property name="url" value="jdbc:derby://localhost:1527/EDSDB" />
		<!-- property name="username" value="root" />  -->
		<property name="password" value="password" />
	</bean>
	
    <!--
        Camel routes defined for the EDS service.
    -->
    <camelContext xmlns="http://camel.apache.org/schema/spring">
  		<routeBuilder ref="myBuilder" />   
    	<dataFormats>
 			<json id="externalDataRequest" library="Jackson" unmarshalTypeName="com.ecmdeveloper.eds.model.ExternalDataRequest"/>
 			<json id="externalDataResponse" library="Jackson" unmarshalTypeName="com.ecmdeveloper.eds.model.ExternalDataResponse"/>
    	</dataFormats>
    	
    	<route id="myroute">
    		<from uri="direct:myroute"/>
    		<!-- 
    		<unmarshal ref="externalDataRequest"/>
    		<process ref="setHeadersProcessor"/>
    		 -->
    		 	<to uri="eds:start"/>
    		<!--
    			At this point the following headers are set:
    			 - request
    		 -->
    		 
    		<log message="Request mode: ${header.request.requestMode}"/>
    		
    		<!--  Split the request in different properties -->
    		
    		<split strategyRef="propertyAggrationStrategy">
    			<method bean="propertySplitter"/>
    			
    			<!--  
    				At this point the body is a single property object. 
    			-->
    			
    			<log message="${body}"/>	
				<filter>
					<simple>${body.symbolicName} == 'property_name2' and ${header.request.requestMode} == 'initialExistingObject'</simple>
					<bean ref="propertyOperations" method="hidden"/>
	    			<log message="Filtered ${body}"/>
				</filter>
				<filter>
					<simple>${body.symbolicName} == 'property_name1'</simple>
					<bean ref="propertyOperations" method="readonly"/>
					<!--
					<enrich uri="direct:dbresource" strategyRef="choiceListEnrichAggregation"/>
					
					-->
					<enrich uri="direct:mycsv" strategyRef="choiceListEnrichAggregation"/> 
				</filter>
    		</split>
    		<!-- 
    		<marshal ref="externalDataResponse"/>
  			<convertBodyTo type="java.lang.String"/>
  			 --> 
  			<to uri="eds:end"/>  		
    		<to uri="mock:end"/>
    	</route>
    	
        <route id="timer-to-console">
            <from uri="timer://foo?fixedRate=true&amp;period=1h"/>
            <transform>
               <simple>Hello Web Application, how are you?</simple>
            </transform>
            <to uri="stream:out"/>
        </route>
        
        <!--
        	Choice List from a database 
         -->
         
         <route id="choicelistfromdb">
			<from uri="direct:dbresource"/>
			<setBody>
				<simple>SELECT NAME FROM FIRSTTABLE</simple>
			</setBody>
			<to uri="jdbc:dataSource"/>
			<bean ref="logDatabaseResponse"/>
			<to uri="choicelist:names?valueFieldName=NAME"/>
		</route>
          
        <route id="bla">
        	<from uri="direct:mycsv"/>
        	<setBody>
        	<!-- 
        		<simple>resource:classpath:/daltons.csv</simple>
        	-->	
        		<simple>resource:file:/Users/ricardobelfor/Documents/customeds/cameleds/src/data/csv/daltons.csv</simple>
        	</setBody>
   			<unmarshal><csv delimiter=","/></unmarshal>
			<to uri="choicelist:mydaltons?valueFieldIndex=2&amp;nameFieldIndex=0"/>
        </route> 
        
        <route id="colors">
        	<from uri="direct:colors"/>
        	<setBody>
        		<simple>resource:classpath:/colors.txt</simple>
        	</setBody>
   			<log message="${body}"/>	
   			<unmarshal><csv/></unmarshal>
			<to uri="choicelist:colors"/>
        </route> 
        
    </camelContext>
    
	<bean id="myBuilder" class="com.ecmdeveloper.eds.core.SimpleRouteBuilder"/>

</beans>
